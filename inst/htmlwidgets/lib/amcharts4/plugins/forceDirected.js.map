{"version":3,"sources":["webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedLink.ts","webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedNode.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/add.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/cover.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quad.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/x.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/y.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quadtree.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/data.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/extent.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/find.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/remove.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/root.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/size.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visit.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visitAfter.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/constant.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/jiggle.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/collide.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/link.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-dispatch/src/dispatch.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-timer/src/timer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/simulation.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/x.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/y.js","webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedSeries.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/manyBody.js","webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedTree.ts","webpack:///./plugins/forceDirected.js"],"names":["ForceDirectedLink_ForceDirectedLink","_super","ForceDirectedLink","_this","call","this","className","interfaceColors","InterfaceColorSet","fillOpacity","strokeOpacity","stroke","getFor","isMeasured","nonScalingStroke","interactionsEnabled","distance","strength","applyTheme","tslib_es6","prototype","validate","source","target","path","Path","x","pixelX","y","pixelY","isHidden","isHiding","hide","show","Object","defineProperty","_source","value","_disposers","push","events","on","invalidate","_target","adapter","isEnabled","apply","properties","setPropertyValue","Sprite","Registry","registeredClasses","ForceDirectedNode_ForceDirectedNode","ForceDirectedNode","applyOnClones","togglable","draggable","setStateOnChildren","isActive","expandAll","linksWith","Dictionary","dataItem","component","nodeDragStarted","updateSimulation","outerCircle","createChild","Circle","shouldClone","strokeWidth","bgColor","fill","states","create","scale","outerActiveState","visible","circle","hiddenState","radius","addDisposer","updateLabelSize","label","Label","horizontalCenter","verticalCenter","textAlign","textValign","add","pixelRadius","text","dsRadius","defaultState","Type","width","height","copyFrom","setActive","children","dataItemsInvalid","childrenInited","initNode","updateNodeList","each","child","node","parentLink","dispatchVisibility","restartSimulation","getPropertyValue","linkWith","link","getKey","uid","links","parent","zIndex","nodeIndex","nodes","indexOf","childIndex","forceLinks","childLinks","setKey","unlinkWith","removeKey","Container","tree","d","isNaN","xm","ym","xp","yp","right","bottom","i","j","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","length","_x","_y","next","Array","src_quad","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","undefined","leaf_copy","copy","treeProto","pop","cover","n","xz","yz","Infinity","Math","floor","z","visit","extent","_","arguments","find","x2","y2","q","x3","y3","quads","Quad","dx","dy","d2","sqrt","remove","retainer","previous","removeAll","root","size","callback","visitAfter","constant","jiggle","random","vx","vy","index","nodeById","nodeId","get","Error","noop","dispatch","t","Dispatch","type","name","c","set","slice","concat","constructor","typename","T","typenames","types","trim","split","map","hasOwnProperty","parseTypenames","that","args","taskHead","taskTail","frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer__typeof","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","initialRadius","initialAngle","PI","src_simulation","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","Map","stepper","step","event","tick","iterations","k","forEach","force","fx","fy","initializeNodes","angle","cos","sin","initializeForce","initialize","closest","d3_force_src_x","strengths","d3_force_src_y","ForceDirectedSeries_ForceDirectedSeriesDataItem","ForceDirectedSeriesDataItem","hasChildren","List","duration","fields","_visible","event_1","dispatchImmediately","toValue","event_2","values","setValue","_node","component_1","node_1","Disposer","removeValue","addSprite","itemsFocusable","role","focusable","once","ev","readerTitle","populateString","itemReaderText","hoverable","level","color","colors","getIndex","setProperty","hiddenInLegend","collapsed","createLegendMarker","marker","_legendDataItem","valueLabel","Series","ForceDirectedSeries_ForceDirectedSeries","ForceDirectedSeries","d3forceSimulation","maxRadius","Percent","minRadius","ColorSet","manyBodyStrength","centerStrength","updateRadiuses","dataItems","updateLinksAndNodes","innerWidth","innerHeight","getMaxValue","max","cmax","validateDataItems","_dataDisposers","_maxValue","reset","min","utils_Math","dataFields","processLinkWith","chart","feedLegend","_linkForce","distances","count","bias","id","l","b","m","_typeof","initializeStrength","initializeDistance","src_link","_collisionForce","radii","xi","yi","ri","ri2","prepare","quad","rj","r","collide","linkDatum","getDistance","getStrength","__disabled","disabled","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta","manyBody","nodeDragEnded","updateRadius","minSide","Utils","cursorOverStyle","Mouse","pointer","default","maxLevels","index_1","diColor","utils_Array","dataItemToConnect","getDataItemById","linkWithStrength","di","createDataItem","_nodes","createNode","_links","createLink","RoundedRectangle","cornerRadius","legendDataItem","colorOrig","property","ForceDirectedTree_ForceDirectedTreeDataItem","ForceDirectedTreeDataItem","SerialChart","ForceDirectedTree_ForceDirectedTree","ForceDirectedTree","seriesContainer","layout","createSeries","legend","legendData_1","series","legendSettings","labelText","labels","template","itemLabelText","valueText","valueLabels","itemValueText","applyInternalDefaults","language","translate","getExporting","exporting","info","format","am4plugins_forceDirected","forceDirected_namespaceObject"],"mappings":"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","file":"./plugins/forceDirected.js","sourcesContent":["/**\r\n * ForceDirectedLink module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { ForceDirectedNode } from \"./ForceDirectedNode\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedLink]].\r\n */\r\nexport interface IForceDirectedLinkProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Distance between centers of source and target nodes.\r\n\t */\r\n\tdistance?: number;\r\n\r\n\t/**\r\n\t * Strength of the \"traction\" between source and target nodes.\r\n\t */\r\n\tstrength?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ForceDirectedLink]].\r\n */\r\nexport interface IForceDirectedLinkEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IForceDirectedLinkAdapters extends ISpriteAdapters, IForceDirectedLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A class that builds links between [[ForceDirectedNode]] elements.\r\n *\r\n * @see {@link IForceDirectedLinkEvents} for a list of available events\r\n * @see {@link IForceDirectedLinkAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedLink extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedLinkEvents;\r\n\r\n\t/**\r\n\t * Link source node\r\n\t */\r\n\tprotected _source: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * Link parent node\r\n\t */\r\n\tprotected _target: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedLink\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fillOpacity = 0;\r\n\t\tthis.strokeOpacity = 0.5;\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.interactionsEnabled = false;\r\n\r\n\t\tthis.distance = 1.5;\r\n\t\tthis.strength = 1;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates element:\r\n\t * * Triggers events\r\n\t * * Redraws the element\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tlet source = this.source;\r\n\t\tlet target = this.target;\r\n\t\tif (source && target) {\r\n\t\t\tthis.path = $path.moveTo({ x: source.pixelX, y: source.pixelY }) + $path.lineTo({ x: target.pixelX, y: target.pixelY });\r\n\r\n\t\t\tif (source.isHidden || target.isHidden || source.isHiding || target.isHiding) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.show()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Source node - a node link starts from.\r\n\t * \r\n\t * @param  value  Source node\r\n\t */\r\n\tpublic set source(value: ForceDirectedNode) {\r\n\t\tif (value) {\r\n\t\t\tthis._source = value;\r\n\t\t\tthis._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Source node\r\n\t */\r\n\tpublic get source(): ForceDirectedNode {\r\n\t\treturn this._source;\r\n\t}\r\n\r\n\t/**\r\n\t * Target node - a node link ends at.\r\n\t * \r\n\t * @param  value  Target node\r\n\t */\r\n\tpublic set target(value: ForceDirectedNode) {\r\n\t\tif (value) {\r\n\t\t\tthis._target = value;\r\n\t\t\tthis._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Target node\r\n\t */\r\n\tpublic get target(): ForceDirectedNode {\r\n\t\treturn this._target;\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between centers of source and target nodes.\r\n\t *\r\n\t * This is relative to the radii to sum of both source and target nodes.\r\n\t *\r\n\t * E.g. if this would be set to `1` both nodes would be touching each other.\r\n\t *\r\n\t * @default 1.5\r\n\t * @param  value  Distance\r\n\t */\r\n\tpublic set distance(value: number) {\r\n\t\tthis.setPropertyValue(\"distance\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance\r\n\t */\r\n\tpublic get distance(): number {\r\n\t\tif (this.adapter.isEnabled(\"distance\")) {\r\n\t\t\treturn this.adapter.apply(\"distance\", this.properties.distance);\r\n\t\t}\r\n\t\treturn this.properties.distance;\r\n\t}\r\n\r\n\t/**\r\n\t * Relative \"strength\" of the traction between linked nodes.\r\n\t *\r\n\t * Available values: 0 to XX.\r\n\t *\r\n\t * The bigger the number, the more rigid the link and the less it will\r\n\t * stretch when node is dragged.\r\n\t *\r\n\t * Carefully with very big numbers: nodes and links might start behaving\r\n\t * quite \"nerviously\".\r\n\t *\r\n\t * @default 1\r\n\t * @param  value  Strength\r\n\t */\r\n\tpublic set strength(value: number) {\r\n\t\tthis.setPropertyValue(\"strength\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Strength\r\n\t */\r\n\tpublic get strength(): number {\r\n\t\tif (this.adapter.isEnabled(\"strength\")) {\r\n\t\t\treturn this.adapter.apply(\"strength\", this.properties.strength);\r\n\t\t}\r\n\t\treturn this.properties.strength;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedLink\"] = ForceDirectedLink;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedLink.ts","/**\r\n * Module that defines everything related to building ForceDirectedNodes.\r\n * \r\n * It is a container which has ForceDirectedNode element which is a RoundedRectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { ForceDirectedSeriesDataItem } from \"./ForceDirectedSeries\";\r\nimport { ForceDirectedLink } from \"./ForceDirectedLink\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedNode]].\r\n */\r\nexport interface IForceDirectedNodeProperties extends IContainerProperties {\r\n\texpandAll?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[ForceDirectedNode]].\r\n */\r\nexport interface IForceDirectedNodeEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IForceDirectedNodeAdapters extends IContainerAdapters, IForceDirectedNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates [[ForceDirectedNode]] elements (circles).\r\n *\r\n * @see {@link IForceDirectedNodeEvents} for a list of available events\r\n * @see {@link IForceDirectedNodeAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedNode extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedNodeEvents;\r\n\r\n\t/**\r\n\t * A node's [[Circle]] element.\r\n\t */\r\n\tpublic circle: Circle;\r\n\r\n\t/**\r\n\t * A [[Circle]] element for node's outline. This outline is used on nodes\r\n\t * that have children.\r\n\t */\r\n\tpublic outerCircle: Circle;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: ForceDirectedSeriesDataItem;\r\n\r\n\t/**\r\n\t * Node's [[Label]] element.\r\n\t */\r\n\tpublic label: Label;\r\n\r\n\t/**\r\n\t * A list of other [[ForceDirectedNode]] elements this node is linked with\r\n\t * using `linkWith`.\r\n\t *\r\n\t * @since 4.4.8\r\n\t */\r\n\tpublic linksWith: Dictionary<string, ForceDirectedLink>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedNode\";\r\n\r\n\t\t//this.isMeasured = true; // for correct position of the tooltip\r\n\t\tthis.applyOnClones = true;\r\n\t\tthis.togglable = true;\r\n\t\tthis.draggable = true;\r\n\t\tthis.setStateOnChildren = true;\r\n\r\n\t\tthis.isActive = false;\r\n\t\tthis.expandAll = true;\r\n\r\n\t\tthis.linksWith = new Dictionary<string, ForceDirectedLink>()\r\n\t\tthis._disposers.push(new DictionaryDisposer(this.linksWith));\r\n\r\n\t\tthis.events.on(\"dragstart\", () => {\r\n\t\t\tif (this.dataItem.component) {\r\n\t\t\t\tthis.dataItem.component.nodeDragStarted();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tthis.events.on(\"drag\", () => {\r\n\t\t\tthis.updateSimulation();\r\n\t\t}, this, false);\r\n\r\n\t\tlet outerCircle = this.createChild(Circle);\r\n\t\touterCircle.shouldClone = false;\r\n\t\touterCircle.strokeWidth = 2;\r\n\r\n\t\tlet bgColor = new InterfaceColorSet().getFor(\"background\");\r\n\t\touterCircle.fill = bgColor;\r\n\t\tthis.outerCircle = outerCircle;\r\n\r\n\t\tlet hoverState = outerCircle.states.create(\"hover\");\r\n\t\thoverState.properties.scale = 1.1;\r\n\r\n\t\tlet outerActiveState = outerCircle.states.create(\"active\");\r\n\t\touterActiveState.properties.scale = 1.1;\r\n\t\touterActiveState.properties.visible = true;\r\n\r\n\t\tlet activeHoverState = outerCircle.states.create(\"hoverActive\");\r\n\t\tactiveHoverState.properties.scale = 1;\r\n\r\n\t\tlet circle = this.createChild(Circle);\r\n\r\n\t\tlet activeState = circle.states.create(\"active\");\r\n\t\tactiveState.properties.visible = true;\r\n\r\n\t\tcircle.shouldClone = false;\r\n\t\tcircle.interactionsEnabled = false;\r\n\t\tcircle.hiddenState.properties.radius = 0.01;\r\n\t\tcircle.events.on(\"validated\", this.updateSimulation, this, false)\r\n\t\tcircle.hiddenState.properties.visible = true;\r\n\r\n\r\n\t\tthis.circle = circle;\r\n\r\n\t\tthis.addDisposer(circle.events.on(\"validated\", this.updateLabelSize, this, false));\r\n\r\n\t\tthis._disposers.push(this.circle);\r\n\r\n\t\tlet label = this.createChild(Label);\r\n\t\tlabel.shouldClone = false;\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.fill = bgColor;\r\n\t\tlabel.strokeOpacity = 0;\r\n\t\tlabel.interactionsEnabled = false;\r\n\t\tlabel.textAlign = \"middle\";\r\n\t\tlabel.textValign = \"middle\";\r\n\t\tthis.label = label;\r\n\r\n\t\tthis.adapter.add(\"tooltipY\", (y, target) => {\r\n\t\t\treturn -target.circle.pixelRadius;\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateLabelSize() {\r\n\t\tif (this.label.text) {\r\n\t\t\tlet circle = this.circle;\r\n\t\t\tlet radius = circle.pixelRadius;\r\n\r\n\t\t\tlet ds = circle.defaultState;\r\n\t\t\tlet dsRadius = ds.properties.radius\r\n\t\t\tif ($type.isNumber(dsRadius)) {\r\n\t\t\t\tradius = dsRadius;\r\n\t\t\t}\r\n\r\n\t\t\tthis.label.width = 2 * radius;\r\n\t\t\tthis.label.height = 2 * radius;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[ForceDirectedNode]].\r\n\t *\r\n\t * @param source Source ForceDirectedNode\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.circle) {\r\n\t\t\tthis.circle.copyFrom(source.circle);\r\n\t\t}\r\n\t\tif (this.label) {\r\n\t\t\tthis.label.copyFrom(source.label);\r\n\t\t}\r\n\t\tif (this.outerCircle) {\r\n\t\t\tthis.outerCircle.copyFrom(source.outerCircle);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets node as \"active\" (expanded).\r\n\t * \r\n\t * @ignore\r\n\t * @param  value  Active or not?\r\n\t */\r\n\tpublic setActive(value: boolean) {\r\n\t\tsuper.setActive(value);\r\n\r\n\t\tlet dataItem = this.dataItem;\r\n\r\n\t\tif (dataItem) {\r\n\r\n\t\t\tlet children = dataItem.children;\r\n\t\t\tlet component = dataItem.component;\r\n\t\t\tif (!component.dataItemsInvalid) {\r\n\t\t\t\tif (value && children && !dataItem.childrenInited) {\r\n\t\t\t\t\tcomponent.initNode(dataItem);\r\n\t\t\t\t\tcomponent.updateNodeList();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tif (children) {\r\n\t\t\t\t\t\tchildren.each((child) => {\r\n\t\t\t\t\t\t\tchild.node.show();\r\n\t\t\t\t\t\t\tchild.node.interactionsEnabled = true;\r\n\t\t\t\t\t\t\tif (child.parentLink) {\r\n\t\t\t\t\t\t\t\tchild.parentLink.show();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.expandAll) {\r\n\t\t\t\t\t\t\t\tchild.node.isActive = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tchild.node.isActive = false;\r\n\t\t\t\t\t\t\t\t//child.node.hide(0)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.dispatchVisibility(true);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (children) {\r\n\t\t\t\t\t\tchildren.each((child) => {\r\n\t\t\t\t\t\t\tif (child.parentLink) {\r\n\t\t\t\t\t\t\t\tchild.parentLink.hide();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tchild.node.isActive = false;\r\n\t\t\t\t\t\t\tchild.node.interactionsEnabled = false;\r\n\r\n\t\t\t\t\t\t\tchild.node.hide();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.dispatchVisibility(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.updateSimulation();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected updateSimulation() {\r\n\t\tlet dataItem = this.dataItem;\r\n\t\tif (dataItem && dataItem.component) {\r\n\t\t\tdataItem.component.restartSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` (default) toggling a node on will automatically expand\r\n\t * all nodes across the whole tree (all levels) of its descendants.\r\n\t *\r\n\t * Setting to `false` will only expand immediate children (one level).\r\n\t * \r\n\t * @default true\r\n\t * @since 4.4.8\r\n\t * @param  value  Expand all?\r\n\t */\r\n\tpublic set expandAll(value: boolean) {\r\n\t\tthis.setPropertyValue(\"expandAll\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Expand all?\r\n\t */\r\n\tpublic get expandAll(): boolean {\r\n\t\treturn this.getPropertyValue(\"expandAll\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new link between two nodes.\r\n\t *\r\n\t * Use this method to dynamically add links without requiring to revalidate\r\n\t * whole of the data.\r\n\t * \r\n\t * @since 4.4.8\r\n\t * @param   node      Target node\r\n\t * @param   strength  Link strength\r\n\t * @return            New link\r\n\t */\r\n\tpublic linkWith(node: ForceDirectedNode, strength?: number): ForceDirectedLink {\r\n\t\tlet link = this.linksWith.getKey(node.uid);\r\n\t\tif (!link) {\r\n\t\t\tlink = node.linksWith.getKey(this.uid);\r\n\t\t}\r\n\r\n\t\tif (!link) {\r\n\t\t\tlet dataItem = this.dataItem;\r\n\t\t\tlet component = dataItem.component;\r\n\t\t\tlink = component.links.create();\r\n\t\t\tlink.parent = component;\r\n\t\t\tlink.zIndex = -1;\r\n\t\t\tlink.source = this;\r\n\t\t\tlink.target = node;\r\n\t\t\tlink.stroke = dataItem.node.fill;\r\n\r\n\t\t\tif ($type.isNumber(strength)) {\r\n\t\t\t\tlink.strength = strength;\r\n\t\t\t}\r\n\r\n\t\t\tlet nodeIndex = component.nodes.indexOf(dataItem.node);\r\n\t\t\tlet childIndex = component.nodes.indexOf(node);\r\n\r\n\t\t\tcomponent.forceLinks.push({ source: nodeIndex, target: childIndex });\r\n\t\t\tcomponent.updateNodeList();\r\n\r\n\t\t\tdataItem.childLinks.push(link);\r\n\r\n\t\t\tthis.linksWith.setKey(node.uid, link);\r\n\t\t}\r\n\t\treturn link;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a link between two nodes.\r\n\t * \r\n\t * @since 4.4.8\r\n\t * @param  node  Target node\r\n\t */\r\n\tpublic unlinkWith(node: ForceDirectedNode) {\r\n\t\tthis.linksWith.removeKey(node.uid);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedNode\"] = ForceDirectedNode;\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedNode.ts","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/add.js","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/cover.js","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quad.js","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/x.js","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/y.js","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quadtree.js","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/data.js","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/extent.js","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/find.js","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/remove.js","export default function() {\n  return this._root;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/root.js","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/size.js","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visit.js","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visitAfter.js","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/constant.js","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/jiggle.js","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/collide.js","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/link.js","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-dispatch/src/dispatch.js","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-timer/src/timer.js","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/simulation.js","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/x.js","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/y.js","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { Series, SeriesDataItem, ISeriesDataFields, ISeriesProperties, ISeriesAdapters, ISeriesEvents } from \"../../charts/series/Series\";\r\nimport { ForceDirectedTree, ForceDirectedTreeDataItem } from \"./ForceDirectedTree\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ListTemplate, ListDisposer, List } from \"../../core/utils/List\";\r\nimport { ForceDirectedNode } from \"./ForceDirectedNode\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { ForceDirectedLink } from \"./ForceDirectedLink\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport * as d3force from \"d3-force\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { RadialGradient } from \"../../core/rendering/fills/RadialGradient\";\r\nimport { Pattern } from \"../../core/rendering/fills/Pattern\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { OrderedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { AMEvent } from \"../../core/utils/EventDispatcher\";\r\nimport { IDataItemEvents } from \"../../core/DataItem\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedSeries]].\r\n *\r\n * @see {@link DataItem}\r\n * @since 4.3.8\r\n */\r\nexport class ForceDirectedSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: ForceDirectedSeries;\r\n\r\n\t/**\r\n\t * A reference to a component of a data item.\r\n\t */\r\n\tpublic component: ForceDirectedSeries;\r\n\r\n\t/**\r\n\t * A type of node used for this series.\r\n\t */\r\n\tpublic _node: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * A list of [[ForceDirectedLink]] elements of links  to node's children.\r\n\t *\r\n\t * This list does not include a link to node's parent, which is available\r\n\t * through `parentLink`.\r\n\t */\r\n\tpublic childLinks: List<ForceDirectedLink>;\r\n\r\n\t/**\r\n\t * A [[ForceDirectedLink]] to node's parent.\r\n\t */\r\n\tpublic parentLink: ForceDirectedLink;\r\n\r\n\t/**\r\n\t * A Legend's data item.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Have all children already been initialized?\r\n\t */\r\n\tpublic childrenInited: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedSeriesDataItem\";\r\n\r\n\t\tthis.hasChildren.children = true;\r\n\r\n\t\tthis.childLinks = new List<ForceDirectedLink>();\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param fields    A list of fields to set values of\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis._visible = true;\r\n\r\n\t\tif (this.node) {\r\n\t\t\tthis.node.isActive = true;\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dispatchVisibility(visible: boolean) {\r\n\t\tif (this.events.isEnabled(\"visibilitychanged\")) {\r\n\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"visibilitychanged\"] = {\r\n\t\t\t\ttype: \"visibilitychanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tvisible: visible\r\n\t\t\t};\r\n\r\n\t\t\tthis.events.dispatchImmediately(\"visibilitychanged\", event);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Hides the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param toValue   A value to set to `fields` when hiding\r\n\t * @param fields    A list of data fields to set value to `toValue`\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis._visible = false;\r\n\r\n\t\tif (this.events.isEnabled(\"visibilitychanged\")) {\r\n\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"visibilitychanged\"] = {\r\n\t\t\t\ttype: \"visibilitychanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tvisible: false\r\n\t\t\t};\r\n\r\n\t\t\tthis.events.dispatchImmediately(\"visibilitychanged\", event);\r\n\t\t}\r\n\r\n\t\tif (this.node) {\r\n\t\t\tthis.node.isActive = false;\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Numeric value of the item.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\r\n\t\tlet value = this.values.value.value;\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tvalue = 0;\r\n\t\t\t\tthis.children.each((child) => {\r\n\t\t\t\t\tvalue += child.value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * An element, related to this data item. (node)\r\n\t *\r\n\t * @readonly\r\n\t * @return node element\r\n\t */\r\n\tpublic get node(): ForceDirectedNode {\r\n\t\tif (!this._node) {\r\n\r\n\t\t\tlet component = this.component;\r\n\r\n\t\t\tlet node = component.nodes.create();\r\n\t\t\tnode.draggable = true;\r\n\t\t\tthis._node = node;\r\n\r\n\t\t\tthis._disposers.push(node);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tcomponent.nodes.removeValue(node);\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(node);\r\n\t\t\tnode.visible = this.visible;\r\n\t\t\tnode.hiddenState.properties.visible = true;\r\n\r\n\t\t\t// Apply accessibility\r\n\t\t\tif (component.itemsFocusable()) {\r\n\t\t\t\tnode.role = \"menuitem\";\r\n\t\t\t\tnode.focusable = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode.role = \"listitem\";\r\n\t\t\t\tnode.focusable = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply screen reader label\r\n\t\t\tif (node.focusable) {\r\n\t\t\t\tnode.events.once(\"focus\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = component.populateString(component.itemReaderText, this);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tnode.events.once(\"blur\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t\tif (node.hoverable) {\r\n\t\t\t\tnode.events.once(\"over\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = component.populateString(component.itemReaderText, this);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tnode.events.once(\"out\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._node;\r\n\t}\r\n\r\n\t/**\r\n\t * Depth level in the series hierarchy.\r\n\t *\r\n\t * The top-level item will have level set at 0. Its children will have\r\n\t * level 1, and so on.\r\n\t *\r\n\t * @readonly\r\n\t * @return Level\r\n\t */\r\n\tpublic get level(): number {\r\n\t\tif (!this.parent) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.parent.level + 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Item's color.\r\n\t *\r\n\t * If not set, will use parent's color, or, if that is not set either,\r\n\t * automatically assigned color from chart's color set. (`chart.colors`)\r\n\t *\r\n\t * @param value  : Color | LinearGradient | RadialGradient | Pattern\r\n\t */\r\n\tpublic set color(value: Color | LinearGradient | RadialGradient | Pattern) {\r\n\t\tthis.setProperty(\"color\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get color(): Color | LinearGradient | RadialGradient | Pattern {\r\n\t\tlet color = this.properties.color;\r\n\r\n\t\tif (color == undefined) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tcolor = this.parent.color;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (color == undefined) {\r\n\t\t\tif (this.component) {\r\n\t\t\t\tcolor = this.component.colors.getIndex(this.component.colors.step * this.index);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn color;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of id's of other nodes outside of the child/parent tree to link\r\n\t * with.\r\n\t * \r\n\t * @param  value  Link list\r\n\t */\r\n\tpublic set linkWith(value: string[]) {\r\n\t\tthis.setProperty(\"linkWith\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Link list\r\n\t */\r\n\tpublic get linkWith(): string[] {\r\n\t\treturn this.properties.linkWith;\r\n\t}\r\n\r\n\t/**\r\n\t * Should dataItem (node) be hidden in legend?\r\n\t *\r\n\t * @param value Visible in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tthis.setProperty(\"hiddenInLegend\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hidden in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.properties.hiddenInLegend;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether node should start off as collapsed.\r\n\t *\r\n\t * This can be used to specify whether node should start off as collapsed\r\n\t * via data.\r\n\t *\r\n\t * To toggle actual node, use its `isActive` property instead.\r\n\t * \r\n\t * @param  value  Collapsed?\r\n\t */\r\n\tpublic set collapsed(value: boolean) {\r\n\t\tthis.setProperty(\"collapsed\", value);\r\n\t\tthis.node.isActive = !value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Collapsed?\r\n\t */\r\n\tpublic get collapsed(): boolean {\r\n\t\treturn this.properties.collapsed;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of item's sub-children.\r\n\t *\r\n\t * @param children  Item's children\r\n\t */\r\n\tpublic set children(children: OrderedListTemplate<ForceDirectedSeriesDataItem>) {\r\n\t\tthis.setProperty(\"children\", children);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Item's children\r\n\t */\r\n\tpublic get children(): OrderedListTemplate<ForceDirectedSeriesDataItem> {\r\n\t\treturn this.properties.children;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a marker used in the legend for this slice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Marker container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tthis.component.createLegendMarker(marker, this);\r\n\t\tif (!this.node.isActive) {\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A legend's data item, that corresponds to this data item.\r\n\t *\r\n\t * @param value  Legend data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tif (value.label) {\r\n\t\t\tvalue.label.dataItem = this;\r\n\t\t}\r\n\t\tif (value.valueLabel) {\r\n\t\t\tvalue.valueLabel.dataItem = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ForceDirectedSeries]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category.\r\n\t */\r\n\tcategory?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's sub-items.\r\n\t */\r\n\tchildren?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's name.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A name of the field tha holds an array of ids that node should link with\r\n\t * besides of it's own children or parent.\r\n\t */\r\n\tlinkWith?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's color.\r\n\t *\r\n\t * If not set, a new color will be automatically assigned to each item as\r\n\t * defined by theme.\r\n\t */\r\n\tcolor?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be\r\n\t * hidden in legend.\r\n\t */\r\n\thiddenInLegend?: string;\r\n\r\n\t/**\r\n\t * A name of the field that holds boolean flag whether node should start\r\n\t * as collapsed. (nodes start as fully expanded by default)\r\n\t */\r\n\tcollapsed?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedSeries]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * Smallest possible radius in pixels of the node circle.\r\n\t * \r\n\t * @default 5\r\n\t */\r\n\tminRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * Biggest possible radius in pixels of the node circle.\r\n\t * \r\n\t * @default 70\r\n\t */\r\n\tmaxRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * A color set to be used for coloring nodes.\r\n\t *\r\n\t * Each new top level will be assigned a new color from this list.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * Number of levels to display initially.\r\n\t */\r\n\tmaxLevels?: number;\r\n\r\n\t/**\r\n\t * A relative strength with which nodes push or attract each other.\r\n\t */\r\n\tmanyBodyStrength?: number;\r\n\r\n\t/**\r\n\t * A relative strength with which nodes are pushed away or attracted to\r\n\t * center of the chart.\r\n\t */\r\n\tcenterStrength?: number;\r\n\r\n\t/**\r\n\t * Relative attraction strength between the nodes connected with `linkWith`.\r\n\t *\r\n\t * @since 4.4.8\r\n\t */\r\n\tlinkWithStrength?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ForceDirectedSeries]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesEvents extends ISeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedSeries]].\r\n *\r\n * @see {@link Adapter}\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesAdapters extends ISeriesAdapters, IForceDirectedSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a [[ForceDirectedTree]] chart.\r\n *\r\n * @see {@link IForceDirectedSeriesEvents} for a list of available Events\r\n * @see {@link IForceDirectedSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/ForceDirectedTree/} For more information\r\n * @todo Example\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedSeries extends Series {\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _node: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _nodes: ListTemplate<this[\"_node\"]>;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _link: ForceDirectedLink;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _links: ListTemplate<this[\"_link\"]>;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IForceDirectedSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: ForceDirectedSeriesDataItem;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: ForceDirectedTree;\r\n\r\n\t/**\r\n\t * Parent data item of a series.\r\n\t */\r\n\tpublic parentDataItem: ForceDirectedTreeDataItem;\r\n\r\n\t/**\r\n\t * A reference to the `d3.Simulation` instance for fine-grained configuration\r\n\t * of node gravitational dynamics.\r\n\t *\r\n\t * @see {@link https://github.com/d3/d3-force#simulation} For more info\r\n\t */\r\n\tpublic d3forceSimulation: d3force.Simulation<{}, d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>>;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _maxValue: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic forceLinks: d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>[];\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _linkForce: d3force.ForceLink<d3force.SimulationNodeDatum, d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>>;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _collisionForce: d3force.ForceCollide<d3force.SimulationNodeDatum>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedSeries\";\r\n\r\n\t\tthis.d3forceSimulation = d3force.forceSimulation();\r\n\r\n\t\tthis.maxRadius = percent(8);\r\n\t\tthis.minRadius = percent(1);\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\t\tthis.colors.step = 2;\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.manyBodyStrength = -15;\r\n\t\tthis.centerStrength = 0.8;\r\n\r\n\t\tthis.events.on(\"maxsizechanged\", () => {\r\n\t\t\tthis.updateRadiuses(this.dataItems);\r\n\t\t\tthis.updateLinksAndNodes();\r\n\r\n\t\t\tlet d3forceSimulation = this.d3forceSimulation;\r\n\r\n\t\t\tif (d3forceSimulation) {\r\n\t\t\t\td3forceSimulation.force(\"x\", d3force.forceX().x(this.innerWidth / 2).strength(this.centerStrength * 100 / this.innerWidth));\r\n\t\t\t\td3forceSimulation.force(\"y\", d3force.forceY().y(this.innerHeight / 2).strength(this.centerStrength * 100 / this.innerHeight));\r\n\t\t\t\tif (d3forceSimulation.alpha() < 0.4) {\r\n\t\t\t\t\td3forceSimulation.alpha(0.4);\r\n\t\t\t\t\td3forceSimulation.restart();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maximum value from all supplied data items.\r\n\t * \r\n\t * @ignore\r\n\t * @param   dataItems  List of data items\r\n\t * @param   max        Default max\r\n\t * @return             Max\r\n\t */\r\n\tprotected getMaxValue(dataItems: OrderedListTemplate<ForceDirectedSeriesDataItem>, max: number): number {\r\n\t\tdataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.value > max) {\r\n\t\t\t\tmax = dataItem.value;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.children) {\r\n\t\t\t\tlet cmax = this.getMaxValue(dataItem.children, max);\r\n\t\t\t\tif (cmax > max) {\r\n\t\t\t\t\tmax = cmax;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn max;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems(): void {\r\n\r\n\t\tthis._dataDisposers.push(new ListDisposer(this.links));\r\n\r\n\t\tthis._maxValue = this.getMaxValue(this.dataItems, 0);\r\n\r\n\t\tthis.forceLinks = [];\r\n\r\n\t\tthis.colors.reset();\r\n\r\n\t\tlet index = 0;\r\n\r\n\t\tlet radius = Math.min(this.innerHeight / 3, this.innerWidth / 3);\r\n\r\n\t\tif (this.dataItems.length <= 1) {\r\n\t\t\tradius = 0;\r\n\t\t}\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\r\n\t\t\tlet angle = index / this.dataItems.length * 360;\r\n\r\n\t\t\tdataItem.node.x = this.innerWidth / 2 + radius * $math.cos(angle);\r\n\t\t\tdataItem.node.y = this.innerHeight / 2 + radius * $math.sin(angle);\r\n\r\n\t\t\tdataItem.node.fill = dataItem.color;\r\n\t\t\tdataItem.node.stroke = dataItem.color;\r\n\r\n\t\t\tindex++;\r\n\r\n\t\t\tthis.initNode(dataItem);\r\n\t\t})\r\n\r\n\t\tif (this.dataFields.linkWith) {\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tthis.processLinkWith(dataItem);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet d3forceSimulation = this.d3forceSimulation;\r\n\r\n\t\td3forceSimulation.on(\"tick\", () => {\r\n\t\t\tthis.updateLinksAndNodes();\r\n\t\t});\r\n\r\n\t\t// helps to avoid initial scatter\r\n\t\tfor (let i = 0; i < 10; i++) {\r\n\t\t\td3forceSimulation.tick();\r\n\t\t}\r\n\t\td3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / 600));\r\n\r\n\t\tthis.chart.feedLegend();\r\n\r\n\t\tsuper.validateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tpublic updateNodeList() {\r\n\t\tlet d3forceSimulation = this.d3forceSimulation;\r\n\t\td3forceSimulation.nodes(this.nodes.values);\r\n\t\tthis._linkForce = d3force.forceLink(this.forceLinks);\r\n\t\td3forceSimulation.force(\"link\", this._linkForce);\r\n\t\tthis._collisionForce = d3force.forceCollide();\r\n\t\td3forceSimulation.force(\"collision\", this._collisionForce);\r\n\r\n\t\td3forceSimulation.force(\"x\", d3force.forceX().x(this.innerWidth / 2).strength(this.centerStrength * 100 / this.innerWidth));\r\n\t\td3forceSimulation.force(\"y\", d3force.forceY().y(this.innerHeight / 2).strength(this.centerStrength * 100 / this.innerHeight));\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tpublic updateLinksAndNodes() {\r\n\t\tif (this._linkForce) {\r\n\t\t\tthis._linkForce.distance((linkDatum) => {\r\n\t\t\t\treturn this.getDistance(linkDatum)\r\n\t\t\t});\r\n\t\t\tthis._linkForce.strength((linkDatum) => {\r\n\t\t\t\treturn this.getStrength(linkDatum)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this._collisionForce) {\r\n\t\t\tthis._collisionForce.radius(function(node) {\r\n\t\t\t\tif (node instanceof ForceDirectedNode) {\r\n\t\t\t\t\tlet radius = node.circle.pixelRadius;\r\n\t\t\t\t\tif (!node.outerCircle.__disabled && !node.outerCircle.disabled && node.outerCircle.visible) {\r\n\t\t\t\t\t\tradius = (radius + 3) * node.outerCircle.scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn radius;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.d3forceSimulation.force(\"manybody\", d3force.forceManyBody().strength((node) => {\r\n\t\t\tif (node instanceof ForceDirectedNode) {\r\n\t\t\t\treturn node.circle.pixelRadius * this.manyBodyStrength;\r\n\t\t\t}\r\n\t\t\treturn this.manyBodyStrength;\r\n\t\t}));\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected getDistance(linkDatum: d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>) {\r\n\t\tlet source: ForceDirectedNode = <ForceDirectedNode>linkDatum.source;\r\n\t\tlet target: ForceDirectedNode = <ForceDirectedNode>linkDatum.target;\r\n\r\n\t\tlet distance = 0;\r\n\t\tif (target.dataItem && source.dataItem) {\r\n\r\n\r\n\t\t\tlet link = source.linksWith.getKey(target.uid);\r\n\r\n\t\t\tif (link) {\r\n\t\t\t\tdistance = link.distance;\r\n\t\t\t}\r\n\r\n\t\t\tif (!source.isActive) {\r\n\t\t\t\tdistance = 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn (distance * (source.circle.pixelRadius + target.circle.pixelRadius));\r\n\t\t}\r\n\r\n\t\treturn distance;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected getStrength(linkDatum: d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>) {\r\n\t\tlet source: ForceDirectedNode = <ForceDirectedNode>linkDatum.source;\r\n\t\tlet target: ForceDirectedNode = <ForceDirectedNode>linkDatum.target;\r\n\r\n\t\tlet strength = 0;\r\n\r\n\t\tlet link = source.linksWith.getKey(target.uid);\r\n\t\tif (link) {\r\n\t\t\tstrength = link.strength;\r\n\t\t}\r\n\r\n\t\treturn strength;\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for drag end event.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic nodeDragEnded(): void {\r\n\t\tthis.d3forceSimulation.alphaTarget(0);\r\n\t}\r\n\t/**\r\n\t * Handler for drag start event.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic nodeDragStarted(): void {\r\n\t\tthis.d3forceSimulation.alpha(0.1);\r\n\t\tthis.d3forceSimulation.restart();\r\n\t}\r\n\r\n\t/**\r\n\t * Resets positions of whole tree.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic restartSimulation(): void {\r\n\t\tif (this.d3forceSimulation.alpha() <= 0.3) {\r\n\t\t\tthis.d3forceSimulation.alpha(0.3);\r\n\t\t\tthis.d3forceSimulation.restart();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateRadiuses(dataItems: OrderedListTemplate<ForceDirectedSeriesDataItem>) {\r\n\t\tdataItems.each((dataItem) => {\r\n\t\t\tthis.updateRadius(dataItem);\r\n\t\t\tif (dataItem.childrenInited) {\r\n\t\t\t\tthis.updateRadiuses(dataItem.children);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateRadius(dataItem: ForceDirectedSeriesDataItem) {\r\n\t\tlet node = dataItem.node;\r\n\t\tlet minSide = (this.innerWidth + this.innerHeight) / 2;\r\n\t\tlet minRadius = $utils.relativeToValue(this.minRadius, minSide)\r\n\t\tlet maxRadius = $utils.relativeToValue(this.maxRadius, minSide)\r\n\r\n\t\tlet radius = minRadius + dataItem.value / this._maxValue * (maxRadius - minRadius);\r\n\r\n\t\tif (!$type.isNumber(radius)) {\r\n\t\t\tradius = minRadius;\r\n\t\t}\r\n\r\n\t\t//if(!node.circle.isHidden){\r\n\t\tnode.circle.radius = radius;\r\n\t\t//}\r\n\t\tnode.outerCircle.radius = radius + 3;\r\n\r\n\t\tnode.circle.states.getKey(\"active\").properties.radius = radius;\r\n\t\tnode.circle.defaultState.properties.radius = radius;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes node.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic initNode(dataItem: ForceDirectedSeriesDataItem): void {\r\n\r\n\t\tlet node = dataItem.node;\r\n\t\tnode.parent = this;\r\n\t\tthis.updateRadius(dataItem);\r\n\r\n\t\t//let nodeIndex = this.nodes.indexOf(dataItem.node);\r\n\r\n\t\tif (!dataItem.children || dataItem.children.length == 0) {\r\n\t\t\tnode.outerCircle.disabled = true;\r\n\t\t\tnode.circle.interactionsEnabled = true;\r\n\t\t\tnode.cursorOverStyle = MouseCursorStyle.default;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnode.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\t}\r\n\r\n\r\n\t\tif (this.dataItemsInvalid && (dataItem.level >= this.maxLevels - 1 || dataItem.collapsed)) {\r\n\t\t\tnode.isActive = false;\r\n\t\t\tthis.updateNodeList();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!node.isActive) {\r\n\t\t\tnode.hide(0);\r\n\t\t}\r\n\r\n\t\tif (dataItem.children) {\r\n\t\t\tlet index = 0;\r\n\t\t\tdataItem.childrenInited = true;\r\n\r\n\t\t\tif (this.dataItems.length == 1 && dataItem.level == 0) {\r\n\t\t\t\tthis.colors.next();\r\n\t\t\t}\r\n\r\n\t\t\tdataItem.children.each((child) => {\r\n\t\t\t\t/*\r\n\t\t\t\tlet link = this.links.create();\r\n\t\t\t\tlink.parent = this;\r\n\t\t\t\tlink.zIndex = -1;\r\n\t\t\t\tdataItem.childLinks.push(link);\r\n\t\t\t\tlink.source = dataItem.node;\r\n\t\t\t\tlet childIndex = this.nodes.indexOf(child.node);\r\n\t\t\t\tlink.target = child.node;\r\n\t\t\t\tchild.parentLink = link;\r\n\r\n\t\t\t\tthis._forceLinks.push({ source: nodeIndex, target: childIndex });\r\n\t\t\t\t*/\r\n\r\n\t\t\t\tlet link = node.linkWith(child.node);\r\n\t\t\t\tchild.parentLink = link;\r\n\r\n\t\t\t\tlet radius = 2 * node.circle.pixelRadius + child.node.circle.pixelRadius;\r\n\r\n\t\t\t\tlet angle = index / dataItem.children.length * 360;\r\n\r\n\t\t\t\tchild.node.x = node.pixelX + radius * $math.cos(angle);\r\n\t\t\t\tchild.node.y = node.pixelY + radius * $math.sin(angle);\r\n\r\n\t\t\t\tchild.node.circle.radius = 0;\r\n\r\n\t\t\t\tlet color: Color | LinearGradient | RadialGradient | Pattern;\r\n\r\n\t\t\t\tlet diColor = child.properties.color;\r\n\t\t\t\tif ($type.hasValue(diColor)) {\r\n\t\t\t\t\tcolor = diColor;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.dataItems.length == 1 && dataItem.level == 0) {\r\n\t\t\t\t\t\tcolor = this.colors.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcolor = dataItem.color;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchild.color = color;\r\n\t\t\t\tchild.node.fill = color;\r\n\t\t\t\tchild.node.stroke = color;\r\n\t\t\t\tchild.parentLink.stroke = color;\r\n\r\n\t\t\t\tthis.initNode(child);\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t})\r\n\t\t}\r\n\t\tnode.isActive = true;\r\n\t\tnode.show();\r\n\t\tthis.updateNodeList();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected processLinkWith(dataItem: ForceDirectedSeriesDataItem) {\r\n\r\n\t\tif (dataItem.linkWith) {\r\n\t\t\t$array.each(dataItem.linkWith, (id, index) => {\r\n\t\t\t\tlet dataItemToConnect = this.getDataItemById(this.dataItems, id);\r\n\r\n\t\t\t\tif (dataItemToConnect) {\r\n\t\t\t\t\tdataItem.node.linkWith(dataItemToConnect.node, this.linkWithStrength);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (dataItem.children) {\r\n\t\t\tdataItem.children.each((child) => {\r\n\t\t\t\tthis.processLinkWith(child);\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[ForceDirectedSeriesDataItem]] related to node by specific id.\r\n\t *\r\n\t * @ignore\r\n\t * @param   dataItems  List of data items to search in\r\n\t * @param   id         Id to search for\r\n\t * @return             Data item\r\n\t */\r\n\tpublic getDataItemById(dataItems: OrderedListTemplate<ForceDirectedSeriesDataItem>, id: string): ForceDirectedSeriesDataItem {\r\n\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\tif (dataItem.id == id) {\r\n\t\t\t\treturn dataItem;\r\n\t\t\t}\r\n\t\t\tif (dataItem.children) {\r\n\t\t\t\tlet di = this.getDataItemById(dataItem.children, id);\r\n\t\t\t\tif (di) {\r\n\t\t\t\t\treturn di;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ForceDirectedSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of nodes in series.\r\n\t * \r\n\t * @return  Node list\r\n\t */\r\n\tpublic get nodes(): ListTemplate<this[\"_node\"]> {\r\n\t\tif (!this._nodes) {\r\n\t\t\tlet node = this.createNode();\r\n\r\n\t\t\tnode.applyOnClones = true;\r\n\t\t\tthis._disposers.push(node);\r\n\r\n\t\t\tthis._nodes = new ListTemplate(node);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._nodes));\r\n\t\t}\r\n\t\treturn this._nodes;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of links between nodes.\r\n\t * \r\n\t * @return  Link list\r\n\t */\r\n\tpublic get links(): ListTemplate<this[\"_link\"]> {\r\n\t\tif (!this._links) {\r\n\t\t\tlet link = this.createLink();\r\n\t\t\tlink.applyOnClones = true;\r\n\t\t\tthis._disposers.push(link);\r\n\r\n\t\t\tthis._links = new ListTemplate(link);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._links));\r\n\t\t}\r\n\t\treturn this._links;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new node.\r\n\t */\r\n\tprotected createNode(): this[\"_node\"] {\r\n\t\treturn new ForceDirectedNode();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new link.\r\n\t */\r\n\tprotected createLink(): this[\"_link\"] {\r\n\t\treturn new ForceDirectedLink();\r\n\t}\r\n\r\n\t/**\r\n\t * Smallest possible radius in pixels of the node circle.\r\n\t * \r\n\t * If set in percent, it radius will be calculated from average width and\r\n\t * height of series.\r\n\t * \r\n\t * @default Percent(1)\r\n\t * @param  value  Minimum radius (px or percent)\r\n\t */\r\n\tpublic set minRadius(value: number | Percent) {\r\n\t\tthis.setPropertyValue(\"minRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Minimum radius (px or percent)\r\n\t */\r\n\tpublic get minRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"minRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Biggest possible radius in pixels of the node circle.\r\n\t * \r\n\t * If set in percent, it radius will be calculated from average width and\r\n\t * height of series.\r\n\t *\r\n\t * @default Percent(8)\r\n\t * @param  value  Maximum radius (px or Percent)\r\n\t */\r\n\tpublic set maxRadius(value: number | Percent) {\r\n\t\tthis.setPropertyValue(\"maxRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Maximum radius (px or Percent)\r\n\t */\r\n\tpublic get maxRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"maxRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * A color set to be used for nodes.\r\n\t *\r\n\t * iIt works like this:\r\n\t * \r\n\t * The first level with more than one node, assigns different colors to all\r\n\t * nodes in this list. Their child nodes inherit the color.\r\n\t *\r\n\t * For example, if the top level has one node with three children, the top\r\n\t * node will get first color, the first child will get second color, etc.\r\n\t *\r\n\t * If there are two top nodes, the first top node gets first color, the\r\n\t * second top node gets the second color. Their subsequent children inherit\r\n\t * colors.\r\n\t *\r\n\t * @param value  Color set\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color set\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of levels to be displayed initially.\r\n\t * \r\n\t * @param  value  Number of levels\r\n\t */\r\n\tpublic set maxLevels(value: number) {\r\n\t\tthis.setPropertyValue(\"maxLevels\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Number of levels\r\n\t */\r\n\tpublic get maxLevels(): number {\r\n\t\treturn this.getPropertyValue(\"maxLevels\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative strength each node pushes (or attracts) other nodes (it is\r\n\t * multiplied by `node.circle.radius` for big nodes to push stronger).\r\n\t * \r\n\t * Positive value will make nodes attract each other, while negative will\r\n\t * push away each other. The bigger the negative number is, the more \r\n\t * scattered nodes will be.\r\n\t *\r\n\t * Available value range: `-XX` to `XX`.\r\n\t * \r\n\t * @default -15\r\n\t * @param  value  Body push/attrack strength\r\n\t */\r\n\tpublic set manyBodyStrength(value: number) {\r\n\t\tif (this.setPropertyValue(\"manyBodyStrength\", value)) {\r\n\t\t\tthis.restartSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Body push/attrack strength\r\n\t */\r\n\tpublic get manyBodyStrength(): number {\r\n\t\treturn this.getPropertyValue(\"manyBodyStrength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative strength each child node is pushes (or attracted) to the center\r\n\t * of the chart.\r\n\t * \r\n\t * Positive value will make nodes to be attracted to center, while negative\r\n\t * will push them away.\r\n\t *\r\n\t * Available value range: `-50` to `50`.\r\n\t * \r\n\t * @default 0.8\r\n\t * @param  value  Stregth of attraction to center\r\n\t */\r\n\tpublic set centerStrength(value: number) {\r\n\t\tif (this.setPropertyValue(\"centerStrength\", value)) {\r\n\t\t\tthis.restartSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Stregth of attraction to center\r\n\t */\r\n\tpublic get centerStrength(): number {\r\n\t\treturn this.getPropertyValue(\"centerStrength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative attraction strength between the nodes connected with `linkWith`.\r\n\t *\r\n\t * @since 4.4.8\r\n\t * @param  value  Strength\r\n\t * @default undefined\r\n\t */\r\n\tpublic set linkWithStrength(value: number) {\r\n\t\tif (this.setPropertyValue(\"linkWithStrength\", value)) {\r\n\t\t\tthis.restartSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Strength\r\n\t */\r\n\tpublic get linkWithStrength(): number {\r\n\t\treturn this.getPropertyValue(\"linkWithStrength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker    Container\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic createLegendMarker(marker: Container, dataItem?: this[\"_dataItem\"]): void {\r\n\t\tmarker.children.each((child) => {\r\n\t\t\tlet node = dataItem.node;\r\n\r\n\t\t\tif (child instanceof RoundedRectangle) {\r\n\t\t\t\tchild.cornerRadius(40, 40, 40, 40);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tchild.defaultState.properties.fill = node.fill;\r\n\t\t\tchild.defaultState.properties.stroke = node.stroke;\r\n\t\t\tchild.defaultState.properties.fillOpacity = node.fillOpacity;\r\n\t\t\tchild.defaultState.properties.strokeOpacity = node.strokeOpacity;\r\n\r\n\t\t\tchild.fill = node.fill;\r\n\t\t\tchild.stroke = node.stroke;\r\n\t\t\tchild.fillOpacity = node.fillOpacity;\r\n\t\t\tchild.strokeOpacity = node.strokeOpacity;\r\n\r\n\t\t\tif (child.fill == undefined) {\r\n\t\t\t\tchild.__disabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\t\tlegendDataItem.color = node.fill;\r\n\t\t\tlegendDataItem.colorOrig = node.fill;\r\n\r\n\t\t\tnode.events.on(\"propertychanged\", (ev) => {\r\n\t\t\t\tif (ev.property == \"fill\") {\r\n\r\n\t\t\t\t\tchild.__disabled = false;\r\n\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.fill = node.fill;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.fill = node.fill;\r\n\t\t\t\t\tlegendDataItem.color = node.fill;\r\n\t\t\t\t\tlegendDataItem.colorOrig = node.fill;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ev.property == \"stroke\") {\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.stroke = node.stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.stroke = node.stroke;\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false)\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedSeries\"] = ForceDirectedSeries;\r\nregistry.registeredClasses[\"ForceDirectedSeriesDataItem\"] = ForceDirectedSeriesDataItem;\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedSeries.ts","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/manyBody.js","/**\r\n * ForceDirectedTree chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"../../charts/types/SerialChart\";\r\nimport { ForceDirectedSeries, ForceDirectedSeriesDataItem } from \"./ForceDirectedSeries\";\r\nimport { Export } from \"../../core/export/Export\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n * @see {@link DataItem}\r\n */\r\nexport class ForceDirectedTreeDataItem extends SerialChartDataItem { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedTreeDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedTreeProperties extends ISerialChartProperties { }\r\n\r\n/**\r\n * Defines events for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedTreeEvents extends ISerialChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n * @see {@link Adapter}\r\n */\r\nexport interface IForceDirectedTreeAdapters extends ISerialChartAdapters, IForceDirectedTreeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A main class for [[ForceDirectedTree]] chart type.\r\n *\r\n * @see {@link IForceDirectedTreeEvents} for a list of available Events\r\n * @see {@link IForceDirectedTreeAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/force-directed/} For more information\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedTree extends SerialChart {\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: ForceDirectedTreeDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IForceDirectedTreeDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedTreeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedTreeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedTreeEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: ForceDirectedSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedTree\";\r\n\r\n\t\tthis.seriesContainer.isMeasured = true;\r\n\t\tthis.seriesContainer.layout = \"absolute\";\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new series of the suitable type.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new ForceDirectedSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ForceDirectedTreeDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\r\n\t\t\tlet legendData: any[] = [];\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (!series.hiddenInLegend) {\r\n\r\n\t\t\t\t\tlet dataItems = series.dataItems;\r\n\t\t\t\t\tif (dataItems.length == 1) {\r\n\t\t\t\t\t\tlet children = series.dataItems.getIndex(0).children;\r\n\t\t\t\t\t\tif (children.length > 0) {\r\n\t\t\t\t\t\t\tdataItems = children;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItems.each((dataItem) => {\r\n\t\t\t\t\t\tif (!dataItem.hiddenInLegend) {\r\n\t\t\t\t\t\t\tlegendData.push(<ForceDirectedSeriesDataItem>dataItem);\r\n\r\n\t\t\t\t\t\t\tlet legendSettings = series.legendSettings;\r\n\t\t\t\t\t\t\tif (legendSettings) {\r\n\t\t\t\t\t\t\t\tif (legendSettings.labelText) {\r\n\t\t\t\t\t\t\t\t\tlegend.labels.template.text = legendSettings.labelText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\t\t\t\tlegend.labels.template.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (legendSettings.valueText) {\r\n\t\t\t\t\t\t\t\t\tlegend.valueLabels.template.text = legendSettings.valueText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\t\t\t\tlegend.valueLabels.template.text = legendSettings.itemValueText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Force directed tree\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Since this chart uses hierarchical data, we need to remove childrent\r\n\t * dataField from export of non-hierarchical formats such as CSV and XSLX.\r\n\t *\r\n\t * @return Export\r\n\t */\r\n\tprotected getExporting(): Export {\r\n\t\tconst exporting = super.getExporting();\r\n\t\texporting.adapter.add(\"formatDataFields\", (info) => {\r\n\t\t\tif (info.format == \"csv\" || info.format == \"xlsx\") {\r\n\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\tif($type.hasValue(series.dataFields.children)) {\r\n\t\t\t\t\t\tdelete info.dataFields[series.dataFields.children];\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn info;\r\n\t\t})\r\n\t\treturn exporting;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedTree\"] = ForceDirectedTree;\r\nregistry.registeredClasses[\"ForceDirectedTreeDataItem\"] = ForceDirectedTreeDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedTree.ts","import * as m from \"../../es2015/plugins/forceDirected\";\nwindow.am4plugins_forceDirected = m;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/forceDirected.js\n// module id = null\n// module chunks = "],"sourceRoot":""}